{"ast":null,"code":"var _jsxFileName = \"/home/marihuyatnik/ERW/Module-BinaryOperations/src/components/Template/index.tsx\";\nimport { Component } from 'react';\nimport TaskTimer from '../TaskTimer/index';\n\n// import  Matrix  from '../MatrixLibrary/Matrix';\n// import { MatrixController } from '../MatrixLibrary/MatrixController';\n\nimport { GraphGenerator } from '../GraphLibrary/GraphGenerator';\nimport { GraphController } from '../GraphLibrary/GraphController';\nimport { ToolBar } from '../Toolbar/ToolBar';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Template extends Component {\n  constructor(props) {\n    super(props);\n    this.visualizing_policy = \"circle\";\n    let g = this.generateGraph();\n    let t_g = this.generateTaskGraph();\n    this.state = {\n      graph: g,\n      task_graph: t_g\n    };\n  }\n  render() {\n    const Task = this.task();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'App',\n      id: \"wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'MainRow',\n          children: [this.isGraphModule() && /*#__PURE__*/_jsxDEV(GraphController, {\n            id: \"cy1\",\n            className: \"GraphCell\",\n            graph: this.state.graph,\n            visualization_policy: this.visualizing_policy,\n            is_nodeid_visible: this.isNodeNameVisible(),\n            is_weights_visible: this.isEdgeWeightVisible()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"drtfghbjk\",\n            className: 'TaskCell',\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u0417\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Task, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"drtfghbjk\",\n            className: 'TaskCellGraph',\n            children: /*#__PURE__*/_jsxDEV(GraphController, {\n              id: \"cy2\",\n              className: \"TaskCellGraph\",\n              graph: this.state.task_graph,\n              visualization_policy: this.visualizing_policy,\n              is_nodeid_visible: this.isNodeNameVisible(),\n              is_weights_visible: this.isEdgeWeightVisible()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'ToolCell',\n            children: /*#__PURE__*/_jsxDEV(ToolBar, {\n              next_stage: this.nextStage,\n              base_button: true,\n              base_button_message: this.helpMessage(),\n              graph_manipulations_button: this.isGraphModified(),\n              graph_coloring_buttons: this.isGraphRepainted(),\n              graph_adj_coloring_buttons: this.isGraphAdjRepainted(),\n              graph_naming_buttons: this.isGraphNodeRenamed(),\n              graph_weight_buttons: this.isGraphReweight(),\n              change_visualization_policy_buttons: this.isVisualizingPolicyChangeble()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'LeftBottom',\n          children: /*#__PURE__*/_jsxDEV(TaskTimer, {\n            timeSeconds: 100,\n            onTimerExpire: this.nextStage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n  nextStage() {\n    console.log(\"next stage\");\n  }\n  helpMessage() {\n    return \"Good luck!\";\n  }\n  task() {\n    return () => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u042D\\u0442\\u043E \\u043F\\u0443\\u0441\\u0442\\u043E\\u0439 \\u043A\\u043E\\u043C\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 22\n    }, this);\n  }\n  generateGraph() {\n    let graph = GraphGenerator.random(5, 0.3);\n    return graph;\n  }\n  generateTaskGraph() {\n    let task_graph = GraphGenerator.random(5, 0.3);\n    return task_graph;\n  }\n  isGraphModule() {\n    return true;\n  }\n  generateMatrix() {\n    // let matrix: Matrix = new Matrix(1, 1, [])\n    // return matrix\n  }\n  isGraphModified() {\n    return true;\n  }\n  isGraphRepainted() {\n    return false;\n  }\n  isGraphAdjRepainted() {\n    return false;\n  }\n  isGraphNodeRenamed() {\n    return true;\n  }\n  isGraphReweight() {\n    return false;\n  }\n  isVisualizingPolicyChangeble() {\n    return false;\n  }\n  isNodeNameVisible() {\n    return true;\n  }\n  isEdgeWeightVisible() {\n    return false;\n  }\n  componentDidMount() {\n    let vp = document.getElementById(\"visualization-policy\");\n    vp === null || vp === void 0 ? void 0 : vp.addEventListener(\"change\", () => {\n      this.visualizing_policy = vp.value;\n      this.forceUpdate();\n    });\n  }\n}","map":{"version":3,"names":["Component","TaskTimer","GraphGenerator","GraphController","ToolBar","jsxDEV","_jsxDEV","Template","constructor","props","visualizing_policy","g","generateGraph","t_g","generateTaskGraph","state","graph","task_graph","render","Task","task","className","id","children","isGraphModule","visualization_policy","is_nodeid_visible","isNodeNameVisible","is_weights_visible","isEdgeWeightVisible","fileName","_jsxFileName","lineNumber","columnNumber","next_stage","nextStage","base_button","base_button_message","helpMessage","graph_manipulations_button","isGraphModified","graph_coloring_buttons","isGraphRepainted","graph_adj_coloring_buttons","isGraphAdjRepainted","graph_naming_buttons","isGraphNodeRenamed","graph_weight_buttons","isGraphReweight","change_visualization_policy_buttons","isVisualizingPolicyChangeble","timeSeconds","onTimerExpire","console","log","random","generateMatrix","componentDidMount","vp","document","getElementById","addEventListener","value","forceUpdate"],"sources":["/home/marihuyatnik/ERW/Module-BinaryOperations/src/components/Template/index.tsx"],"sourcesContent":["import {Component, FC} from 'react';\nimport TaskTimer from '../TaskTimer/index';\nimport { Graph } from '../GraphLibrary/Graph';\n// import  Matrix  from '../MatrixLibrary/Matrix';\n// import { MatrixController } from '../MatrixLibrary/MatrixController';\nimport cytoscape from 'cytoscape';\nimport { GraphGenerator } from '../GraphLibrary/GraphGenerator';\nimport { GraphController } from '../GraphLibrary/GraphController';\nimport { ToolBar } from '../Toolbar/ToolBar';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './style.css';\n\n\ninterface IProps {\n\n}\n\n\ninterface IState<T1, T2> {\n    graph: Graph<T1, T2>;\n    task_graph: Graph<T1, T2>;\n}\n\n\nexport class Template<T1, T2> extends Component<IProps, IState<T1, T2>> {\n    \n    visualizing_policy = \"circle\"\n\n    constructor(props: IProps){\n        super(props);\n\n        let g: Graph<T1, T2> = this.generateGraph()\n        let t_g: Graph<T1, T2> = this.generateTaskGraph()\n        this.state = {\n            graph: g,\n            task_graph: t_g,\n        }\n    }\n\n    public render(){\n        const Task: any = this.task();\n        \n        return (\n            <div className={'App'} id=\"wrap\">\n                {(\n                    <div>\n                        <div className={'MainRow'}>\n                            {this.isGraphModule() &&\n                                <GraphController \n                                    id={\"cy1\"}\n                                    className='GraphCell'\n                                    graph={this.state.graph} \n                                    visualization_policy={this.visualizing_policy}\n                                    is_nodeid_visible={this.isNodeNameVisible()} \n                                    is_weights_visible={this.isEdgeWeightVisible()}/>\n                            }\n                            {/* {!this.isGraphModule() &&\n                                <div id={\"matrix\"} className={'GraphCell'}>\n                                    <MatrixController\n                                    matrix={this.generateMatrix()}/>                                                                   \n                                </div>   \n                            }                         */}\n                            <div id={\"drtfghbjk\"} className={'TaskCell'}>\n                                <p>Задание</p>\n                                <Task/>                               \n                            </div>\n                            <div id={\"drtfghbjk\"} className={'TaskCellGraph'}>\n                            <GraphController \n                                    id={\"cy2\"}\n                                    className='TaskCellGraph'\n                                    graph={this.state.task_graph} \n                                    visualization_policy={this.visualizing_policy}\n                                    is_nodeid_visible={this.isNodeNameVisible()} \n                                    is_weights_visible={this.isEdgeWeightVisible()}/>                              \n                            </div>\n                            <div className={'ToolCell'}>\n                                <ToolBar \n                                    next_stage={this.nextStage} \n                                    base_button={true}\n                                    base_button_message={this.helpMessage()}\n                                    graph_manipulations_button={this.isGraphModified()} \n                                    graph_coloring_buttons={this.isGraphRepainted()}\n                                    graph_adj_coloring_buttons={this.isGraphAdjRepainted()} \n                                    graph_naming_buttons={this.isGraphNodeRenamed()}\n                                    graph_weight_buttons={this.isGraphReweight()}\n                                    change_visualization_policy_buttons={this.isVisualizingPolicyChangeble()}\n                                />\n                            </div>\n                        </div>\n                        <div className={'LeftBottom'}>\n                            <TaskTimer timeSeconds={100} onTimerExpire={this.nextStage}/>\n                        </div>\n\n                    </div>)}\n            </div>\n        );\n    }\n\n    private nextStage(){\n        console.log(\"next stage\")\n    }\n\n    protected helpMessage() {\n        return \"Good luck!\"\n    }\n\n    protected task(){\n        return () => <p>Это пустой компонент задания</p>;\n    }\n\n    protected generateGraph(){\n        let graph: Graph<T1, T2> = GraphGenerator.random(5, 0.3)\n        return graph\n    }\n\n    protected generateTaskGraph(){\n        let task_graph: Graph<T1, T2> = GraphGenerator.random(5, 0.3)\n        return task_graph\n    }\n\n    protected isGraphModule(){\n        return true\n    }\n\n    protected generateMatrix(){\n        // let matrix: Matrix = new Matrix(1, 1, [])\n        // return matrix\n    }\n\n    protected isGraphModified(){\n        return true\n    }\n    protected isGraphRepainted(){\n        return false\n    }\n    protected isGraphAdjRepainted(){\n        return false\n    }\n    protected isGraphNodeRenamed(){\n        return true\n    }\n    protected isGraphReweight(){\n        return false\n    }\n    protected isVisualizingPolicyChangeble(){\n        return false\n    }\n\n    protected isNodeNameVisible(){\n        return true\n    }\n    protected isEdgeWeightVisible(){\n        return false\n    }\n\n    componentDidMount() {\n        let vp = document.getElementById(\"visualization-policy\") as HTMLSelectElement\n        vp?.addEventListener(\"change\", () => {\n            this.visualizing_policy = vp.value\n            this.forceUpdate()\n        });\n    }\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}