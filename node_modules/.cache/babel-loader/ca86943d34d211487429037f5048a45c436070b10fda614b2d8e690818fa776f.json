{"ast":null,"code":"var _jsxFileName = \"/home/marihuyatnik/ERW/Module-BinaryOperations/src/components/Template/index.tsx\";\nimport { Component } from \"react\";\nimport TaskTimer from \"../TaskTimer/index\";\n\n// import  Matrix  from '../MatrixLibrary/Matrix';\n// import { MatrixController } from '../MatrixLibrary/MatrixController';\n\nimport { GraphGenerator } from \"../GraphLibrary/GraphGenerator\";\nimport { GraphController } from \"../GraphLibrary/GraphController\";\nimport { ToolBar } from \"../Toolbar/ToolBar\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Template extends Component {\n  constructor(props) {\n    super(props);\n    this.visualizing_policy = \"circle\";\n    let g = this.generateGraph();\n    let t_g = this.generateTaskGraph();\n    this.state = {\n      graph: g,\n      task_graph: t_g\n    };\n  }\n  render() {\n    const variant = Math.random() < 0.5 ? 1 : 2;\n    const Task = this.task();\n    if (variant == 0) {\n      console.log(\"x положительное\");\n    } else {\n      console.log(\"x равно нулю\");\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      id: \"wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"MainRow\",\n          children: [this.isGraphModule() && /*#__PURE__*/_jsxDEV(GraphController, {\n            id: \"cy1\",\n            className: \"GraphCell\",\n            graph: this.state.graph,\n            visualization_policy: this.visualizing_policy,\n            is_nodeid_visible: this.isNodeNameVisible(),\n            is_weights_visible: this.isEdgeWeightVisible()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), !this.isGraphModule() && /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"matrix\",\n            className: \"GraphCell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"drtfghbjk\",\n            className: `TaskCell ${variant === 1 ? \"TaskCell-full-height\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u0417\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Task, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), variant === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"drtfghbjk\",\n            className: \"TaskCellGraph\",\n            children: /*#__PURE__*/_jsxDEV(GraphController, {\n              id: \"cy2\",\n              className: \"TaskCellGraph\",\n              graph: this.state.task_graph,\n              visualization_policy: this.visualizing_policy,\n              is_nodeid_visible: this.isNodeNameVisible(),\n              is_weights_visible: this.isEdgeWeightVisible()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ToolCell\",\n            children: /*#__PURE__*/_jsxDEV(ToolBar, {\n              next_stage: this.nextStage,\n              base_button: true,\n              base_button_message: this.helpMessage(),\n              graph_manipulations_button: this.isGraphModified(),\n              graph_coloring_buttons: this.isGraphRepainted(),\n              graph_adj_coloring_buttons: this.isGraphAdjRepainted(),\n              graph_naming_buttons: this.isGraphNodeRenamed(),\n              graph_weight_buttons: this.isGraphReweight(),\n              change_visualization_policy_buttons: this.isVisualizingPolicyChangeble()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"LeftBottom\",\n          children: /*#__PURE__*/_jsxDEV(TaskTimer, {\n            timeSeconds: 100,\n            onTimerExpire: this.nextStage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n  nextStage() {\n    console.log(\"next stage\");\n  }\n  helpMessage() {\n    return \"Good luck!\";\n  }\n  task() {\n    return () => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u042D\\u0442\\u043E \\u043F\\u0443\\u0441\\u0442\\u043E\\u0439 \\u043A\\u043E\\u043C\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 18\n    }, this);\n  }\n  task_matrix() {\n    return () => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u042D\\u0442\\u043E \\u043F\\u0443\\u0441\\u0442\\u043E\\u0439 \\u043A\\u043E\\u043C\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 18\n    }, this);\n  }\n  generateGraph() {\n    let graph = GraphGenerator.random(5, 0.3);\n    return graph;\n  }\n  generateTaskGraph() {\n    let task_graph = GraphGenerator.random(5, 0.3);\n    return task_graph;\n  }\n  isGraphModule() {\n    return true;\n  }\n  generateMatrix() {\n    // let matrix: Matrix = new Matrix(1, 1, []);\n    // return matrix;\n  }\n  isGraphModified() {\n    return true;\n  }\n  isGraphRepainted() {\n    return false;\n  }\n  isGraphAdjRepainted() {\n    return false;\n  }\n  isGraphNodeRenamed() {\n    return true;\n  }\n  isGraphReweight() {\n    return false;\n  }\n  isVisualizingPolicyChangeble() {\n    return false;\n  }\n  isNodeNameVisible() {\n    return true;\n  }\n  isEdgeWeightVisible() {\n    return false;\n  }\n  componentDidMount() {\n    let vp = document.getElementById(\"visualization-policy\");\n    vp === null || vp === void 0 ? void 0 : vp.addEventListener(\"change\", () => {\n      this.visualizing_policy = vp.value;\n      this.forceUpdate();\n    });\n  }\n}","map":{"version":3,"names":["Component","TaskTimer","GraphGenerator","GraphController","ToolBar","jsxDEV","_jsxDEV","Template","constructor","props","visualizing_policy","g","generateGraph","t_g","generateTaskGraph","state","graph","task_graph","render","variant","Math","random","Task","task","console","log","className","id","children","isGraphModule","visualization_policy","is_nodeid_visible","isNodeNameVisible","is_weights_visible","isEdgeWeightVisible","fileName","_jsxFileName","lineNumber","columnNumber","next_stage","nextStage","base_button","base_button_message","helpMessage","graph_manipulations_button","isGraphModified","graph_coloring_buttons","isGraphRepainted","graph_adj_coloring_buttons","isGraphAdjRepainted","graph_naming_buttons","isGraphNodeRenamed","graph_weight_buttons","isGraphReweight","change_visualization_policy_buttons","isVisualizingPolicyChangeble","timeSeconds","onTimerExpire","task_matrix","generateMatrix","componentDidMount","vp","document","getElementById","addEventListener","value","forceUpdate"],"sources":["/home/marihuyatnik/ERW/Module-BinaryOperations/src/components/Template/index.tsx"],"sourcesContent":["import { Component, FC } from \"react\";\nimport TaskTimer from \"../TaskTimer/index\";\nimport { Graph } from \"../GraphLibrary/Graph\";\n// import  Matrix  from '../MatrixLibrary/Matrix';\n// import { MatrixController } from '../MatrixLibrary/MatrixController';\nimport cytoscape from \"cytoscape\";\nimport { GraphGenerator } from \"../GraphLibrary/GraphGenerator\";\nimport { GraphController } from \"../GraphLibrary/GraphController\";\nimport { ToolBar } from \"../Toolbar/ToolBar\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./style.css\";\n\ninterface IProps {}\n\ninterface IState<T1, T2> {\n  graph: Graph<T1, T2>;\n  task_graph: Graph<T1, T2>;\n}\n\nexport class Template<T1, T2> extends Component<IProps, IState<T1, T2>> {\n  visualizing_policy = \"circle\";\n\n  constructor(props: IProps) {\n    super(props);\n\n    let g: Graph<T1, T2> = this.generateGraph();\n    let t_g: Graph<T1, T2> = this.generateTaskGraph();\n    this.state = {\n      graph: g,\n      task_graph: t_g,\n    };\n  }\n\n  public render() {\n    const variant = Math.random() < 0.5 ? 1 : 2;\n    const Task: any = this.task();\n    if (variant == 0) {\n      console.log(\"x положительное\");\n    } else {\n      console.log(\"x равно нулю\");\n    }\n    return (\n      <div className={\"App\"} id=\"wrap\">\n        {\n          <div>\n            <div className={\"MainRow\"}>\n              {this.isGraphModule() && (\n                <GraphController\n                  id={\"cy1\"}\n                  className=\"GraphCell\"\n                  graph={this.state.graph}\n                  visualization_policy={this.visualizing_policy}\n                  is_nodeid_visible={this.isNodeNameVisible()}\n                  is_weights_visible={this.isEdgeWeightVisible()}\n                />\n              )}\n              {!this.isGraphModule() && (\n                <div id={\"matrix\"} className={\"GraphCell\"}>\n                  {/* <MatrixController matrix={this.generateMatrix()} /> */}\n                </div>\n              )}\n              <div\n                id={\"drtfghbjk\"}\n                className={`TaskCell ${\n                  variant === 1 ? \"TaskCell-full-height\" : \"\"\n                }`}\n              >\n                <p>Задание</p>\n                <Task />\n              </div>\n              {variant === 2 && (\n                <div id={\"drtfghbjk\"} className={\"TaskCellGraph\"}>\n                  <GraphController\n                    id={\"cy2\"}\n                    className=\"TaskCellGraph\"\n                    graph={this.state.task_graph}\n                    visualization_policy={this.visualizing_policy}\n                    is_nodeid_visible={this.isNodeNameVisible()}\n                    is_weights_visible={this.isEdgeWeightVisible()}\n                  />\n                </div>\n              )}\n              <div className={\"ToolCell\"}>\n                <ToolBar\n                  next_stage={this.nextStage}\n                  base_button={true}\n                  base_button_message={this.helpMessage()}\n                  graph_manipulations_button={this.isGraphModified()}\n                  graph_coloring_buttons={this.isGraphRepainted()}\n                  graph_adj_coloring_buttons={this.isGraphAdjRepainted()}\n                  graph_naming_buttons={this.isGraphNodeRenamed()}\n                  graph_weight_buttons={this.isGraphReweight()}\n                  change_visualization_policy_buttons={this.isVisualizingPolicyChangeble()}\n                />\n              </div>\n            </div>\n            <div className={\"LeftBottom\"}>\n              <TaskTimer timeSeconds={100} onTimerExpire={this.nextStage} />\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n\n  private nextStage() {\n    console.log(\"next stage\");\n  }\n\n  protected helpMessage() {\n    return \"Good luck!\";\n  }\n\n  protected task() {\n    return () => <p>Это пустой компонент задания</p>;\n  }\n\n  protected task_matrix() {\n    return () => <p>Это пустой компонент задания</p>;\n  }\n\n  protected generateGraph() {\n    let graph: Graph<T1, T2> = GraphGenerator.random(5, 0.3);\n    return graph;\n  }\n\n  protected generateTaskGraph() {\n    let task_graph: Graph<T1, T2> = GraphGenerator.random(5, 0.3);\n    return task_graph;\n  }\n\n  protected isGraphModule() {\n    return true;\n  }\n\n  protected generateMatrix() {\n    // let matrix: Matrix = new Matrix(1, 1, []);\n    // return matrix;\n  }\n\n  protected isGraphModified() {\n    return true;\n  }\n  protected isGraphRepainted() {\n    return false;\n  }\n  protected isGraphAdjRepainted() {\n    return false;\n  }\n  protected isGraphNodeRenamed() {\n    return true;\n  }\n  protected isGraphReweight() {\n    return false;\n  }\n  protected isVisualizingPolicyChangeble() {\n    return false;\n  }\n\n  protected isNodeNameVisible() {\n    return true;\n  }\n  protected isEdgeWeightVisible() {\n    return false;\n  }\n\n  componentDidMount() {\n    let vp = document.getElementById(\n      \"visualization-policy\"\n    ) as HTMLSelectElement;\n    vp?.addEventListener(\"change\", () => {\n      this.visualizing_policy = vp.value;\n      this.forceUpdate();\n    });\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAY,OAAO;AACrC,OAAOC,SAAS,MAAM,oBAAoB;;AAE1C;AACA;;AAEA,SAASC,cAAc,QAAQ,gCAAgC;AAC/D,SAASC,eAAe,QAAQ,iCAAiC;AACjE,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,OAAO,kCAAkC;AACzC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASrB,OAAO,MAAMC,QAAQ,SAAiBP,SAAS,CAAyB;EAGtEQ,WAAWA,CAACC,KAAa,EAAE;IACzB,KAAK,CAACA,KAAK,CAAC;IAAC,KAHfC,kBAAkB,GAAG,QAAQ;IAK3B,IAAIC,CAAgB,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;IAC3C,IAAIC,GAAkB,GAAG,IAAI,CAACC,iBAAiB,CAAC,CAAC;IACjD,IAAI,CAACC,KAAK,GAAG;MACXC,KAAK,EAAEL,CAAC;MACRM,UAAU,EAAEJ;IACd,CAAC;EACH;EAEOK,MAAMA,CAAA,EAAG;IACd,MAAMC,OAAO,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;IAC3C,MAAMC,IAAS,GAAG,IAAI,CAACC,IAAI,CAAC,CAAC;IAC7B,IAAIJ,OAAO,IAAI,CAAC,EAAE;MAChBK,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAChC,CAAC,MAAM;MACLD,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC7B;IACA,oBACEnB,OAAA;MAAKoB,SAAS,EAAE,KAAM;MAACC,EAAE,EAAC,MAAM;MAAAC,QAAA,eAE5BtB,OAAA;QAAAsB,QAAA,gBACEtB,OAAA;UAAKoB,SAAS,EAAE,SAAU;UAAAE,QAAA,GACvB,IAAI,CAACC,aAAa,CAAC,CAAC,iBACnBvB,OAAA,CAACH,eAAe;YACdwB,EAAE,EAAE,KAAM;YACVD,SAAS,EAAC,WAAW;YACrBV,KAAK,EAAE,IAAI,CAACD,KAAK,CAACC,KAAM;YACxBc,oBAAoB,EAAE,IAAI,CAACpB,kBAAmB;YAC9CqB,iBAAiB,EAAE,IAAI,CAACC,iBAAiB,CAAC,CAAE;YAC5CC,kBAAkB,EAAE,IAAI,CAACC,mBAAmB,CAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CACF,EACA,CAAC,IAAI,CAACT,aAAa,CAAC,CAAC,iBACpBvB,OAAA;YAAKqB,EAAE,EAAE,QAAS;YAACD,SAAS,EAAE;UAAY;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAErC,CACN,eACDhC,OAAA;YACEqB,EAAE,EAAE,WAAY;YAChBD,SAAS,EAAG,YACVP,OAAO,KAAK,CAAC,GAAG,sBAAsB,GAAG,EAC1C,EAAE;YAAAS,QAAA,gBAEHtB,OAAA;cAAAsB,QAAA,EAAG;YAAO;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACdhC,OAAA,CAACgB,IAAI;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,EACLnB,OAAO,KAAK,CAAC,iBACZb,OAAA;YAAKqB,EAAE,EAAE,WAAY;YAACD,SAAS,EAAE,eAAgB;YAAAE,QAAA,eAC/CtB,OAAA,CAACH,eAAe;cACdwB,EAAE,EAAE,KAAM;cACVD,SAAS,EAAC,eAAe;cACzBV,KAAK,EAAE,IAAI,CAACD,KAAK,CAACE,UAAW;cAC7Ba,oBAAoB,EAAE,IAAI,CAACpB,kBAAmB;cAC9CqB,iBAAiB,EAAE,IAAI,CAACC,iBAAiB,CAAC,CAAE;cAC5CC,kBAAkB,EAAE,IAAI,CAACC,mBAAmB,CAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN,eACDhC,OAAA;YAAKoB,SAAS,EAAE,UAAW;YAAAE,QAAA,eACzBtB,OAAA,CAACF,OAAO;cACNmC,UAAU,EAAE,IAAI,CAACC,SAAU;cAC3BC,WAAW,EAAE,IAAK;cAClBC,mBAAmB,EAAE,IAAI,CAACC,WAAW,CAAC,CAAE;cACxCC,0BAA0B,EAAE,IAAI,CAACC,eAAe,CAAC,CAAE;cACnDC,sBAAsB,EAAE,IAAI,CAACC,gBAAgB,CAAC,CAAE;cAChDC,0BAA0B,EAAE,IAAI,CAACC,mBAAmB,CAAC,CAAE;cACvDC,oBAAoB,EAAE,IAAI,CAACC,kBAAkB,CAAC,CAAE;cAChDC,oBAAoB,EAAE,IAAI,CAACC,eAAe,CAAC,CAAE;cAC7CC,mCAAmC,EAAE,IAAI,CAACC,4BAA4B,CAAC;YAAE;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1E;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNhC,OAAA;UAAKoB,SAAS,EAAE,YAAa;UAAAE,QAAA,eAC3BtB,OAAA,CAACL,SAAS;YAACuD,WAAW,EAAE,GAAI;YAACC,aAAa,EAAE,IAAI,CAACjB;UAAU;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC;EAEV;EAEQE,SAASA,CAAA,EAAG;IAClBhB,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC3B;EAEUkB,WAAWA,CAAA,EAAG;IACtB,OAAO,YAAY;EACrB;EAEUpB,IAAIA,CAAA,EAAG;IACf,OAAO,mBAAMjB,OAAA;MAAAsB,QAAA,EAAG;IAA4B;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAClD;EAEUoB,WAAWA,CAAA,EAAG;IACtB,OAAO,mBAAMpD,OAAA;MAAAsB,QAAA,EAAG;IAA4B;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAClD;EAEU1B,aAAaA,CAAA,EAAG;IACxB,IAAII,KAAoB,GAAGd,cAAc,CAACmB,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC;IACxD,OAAOL,KAAK;EACd;EAEUF,iBAAiBA,CAAA,EAAG;IAC5B,IAAIG,UAAyB,GAAGf,cAAc,CAACmB,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC;IAC7D,OAAOJ,UAAU;EACnB;EAEUY,aAAaA,CAAA,EAAG;IACxB,OAAO,IAAI;EACb;EAEU8B,cAAcA,CAAA,EAAG;IACzB;IACA;EAAA;EAGQd,eAAeA,CAAA,EAAG;IAC1B,OAAO,IAAI;EACb;EACUE,gBAAgBA,CAAA,EAAG;IAC3B,OAAO,KAAK;EACd;EACUE,mBAAmBA,CAAA,EAAG;IAC9B,OAAO,KAAK;EACd;EACUE,kBAAkBA,CAAA,EAAG;IAC7B,OAAO,IAAI;EACb;EACUE,eAAeA,CAAA,EAAG;IAC1B,OAAO,KAAK;EACd;EACUE,4BAA4BA,CAAA,EAAG;IACvC,OAAO,KAAK;EACd;EAEUvB,iBAAiBA,CAAA,EAAG;IAC5B,OAAO,IAAI;EACb;EACUE,mBAAmBA,CAAA,EAAG;IAC9B,OAAO,KAAK;EACd;EAEA0B,iBAAiBA,CAAA,EAAG;IAClB,IAAIC,EAAE,GAAGC,QAAQ,CAACC,cAAc,CAC9B,sBACF,CAAsB;IACtBF,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEG,gBAAgB,CAAC,QAAQ,EAAE,MAAM;MACnC,IAAI,CAACtD,kBAAkB,GAAGmD,EAAE,CAACI,KAAK;MAClC,IAAI,CAACC,WAAW,CAAC,CAAC;IACpB,CAAC,CAAC;EACJ;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}