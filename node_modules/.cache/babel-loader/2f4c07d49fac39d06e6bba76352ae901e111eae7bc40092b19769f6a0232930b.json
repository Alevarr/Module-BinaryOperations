{"ast":null,"code":"var _jsxFileName = \"/home/marihuyatnik/ERW/Module-BinaryOperations/src/components/ModuleExample/module.tsx\";\nimport { GraphGenerator } from \"../GraphLibrary/GraphGenerator\";\nimport { Template } from \"../Template\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ModuleExample extends Template {\n  task() {\n    let operations = [\"сеодинения графов\", \"объединения графов\", \"пересечения графов\"];\n    let i = Math.floor(Math.random() * 3);\n    let operationString = operations[i];\n    return () => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041F\\u0440\\u043E\\u0432\\u0435\\u0441\\u0442\\u0438 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u044E \", operationString]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 22\n    }, this);\n  }\n  task_matrix() {\n    let operations = [\"соединения графов\", \"объединения графов\", \"пересечения графов\"];\n    let i = Math.floor(Math.random() * operations.length);\n    let operationString = operations[i];\n    function generateRandomMatrix(vertices) {\n      let size = vertices.length;\n      let matrix = Array.from({\n        length: size\n      }, () => Array.from({\n        length: size\n      }, () => Math.floor(Math.random() * 2)));\n      for (let i = 0; i < size; i++) {\n        matrix[i][i] = 0; // Ensure no self-loops\n      }\n      return matrix;\n    }\n    function renderMatrix(matrix, vertices) {\n      let headerRow = `<tr><th scope=\"col\"> </th>${vertices.map(v => `<th scope=\"col\">${v}</th>`).join('')}</tr>`;\n      let bodyRows = matrix.map((row, rowIndex) => {\n        let cells = row.map(cell => `<td>${cell}</td>`).join('');\n        return `<tr><th scope=\"row\">${vertices[rowIndex]}</th>${cells}</tr>`;\n      }).join('');\n      return `<table><thead>${headerRow}</thead><tbody>${bodyRows}</tbody></table>`;\n    }\n    function getRandomSubarray(arr, minSize, maxSize) {\n      let shuffled = arr.slice(0);\n      for (let i = arr.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n      }\n      let size = Math.floor(Math.random() * (maxSize - minSize + 1)) + minSize;\n      let subarray = shuffled.slice(0, size);\n      return subarray.sort();\n    }\n    let allVertices = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\"];\n    let minSize = 2;\n    let maxSize = 6;\n    let vertices1 = getRandomSubarray(allVertices, minSize, maxSize);\n    let vertices2 = getRandomSubarray(allVertices, minSize, maxSize);\n    let matrix1 = generateRandomMatrix(vertices1);\n    let matrix2 = generateRandomMatrix(vertices2);\n    return () => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041F\\u0440\\u043E\\u0432\\u0435\\u0441\\u0442\\u0438 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u044E \", operationString, /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: renderMatrix(matrix1, vertices1)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: renderMatrix(matrix2, vertices2)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 22\n    }, this);\n  }\n  generateTaskGraph() {\n    let task_graph = GraphGenerator.random2components(4, 4, 0.3);\n    return task_graph;\n  }\n  generateGraph() {\n    let graph = GraphGenerator.random(0, 0.3);\n    return graph;\n  }\n  isGraphModified() {\n    return true;\n  }\n  isGraphRepainted() {\n    return false;\n  }\n  isGraphNodeRenamed() {\n    return true;\n  }\n  isGraphReweight() {\n    return false;\n  }\n  isVisualizingPolicyChangeble() {\n    return false;\n  }\n  isNodeNameVisible() {\n    return true;\n  }\n  isEdgeWeightVisible() {\n    return false;\n  }\n}","map":{"version":3,"names":["GraphGenerator","Template","jsxDEV","_jsxDEV","ModuleExample","task","operations","i","Math","floor","random","operationString","children","fileName","_jsxFileName","lineNumber","columnNumber","task_matrix","length","generateRandomMatrix","vertices","size","matrix","Array","from","renderMatrix","headerRow","map","v","join","bodyRows","row","rowIndex","cells","cell","getRandomSubarray","arr","minSize","maxSize","shuffled","slice","j","subarray","sort","allVertices","vertices1","vertices2","matrix1","matrix2","dangerouslySetInnerHTML","__html","generateTaskGraph","task_graph","random2components","generateGraph","graph","isGraphModified","isGraphRepainted","isGraphNodeRenamed","isGraphReweight","isVisualizingPolicyChangeble","isNodeNameVisible","isEdgeWeightVisible"],"sources":["/home/marihuyatnik/ERW/Module-BinaryOperations/src/components/ModuleExample/module.tsx"],"sourcesContent":["import { Graph } from \"../GraphLibrary/Graph\";\nimport { GraphGenerator } from \"../GraphLibrary/GraphGenerator\";\nimport { Template } from \"../Template\";\n\n\nexport class ModuleExample<T1, T2> extends Template<T1, T2> {\n    \n    protected override task(){\n        let operations: string[] = [\"сеодинения графов\", \"объединения графов\", \"пересечения графов\"];\n        let i = Math.floor(Math.random() * 3);\n        let operationString = operations[i];\n        \n        return () => <p>Провести операцию {operationString}</p>\n    }\n\n    protected override task_matrix() {\n        let operations: string[] = [\"соединения графов\", \"объединения графов\", \"пересечения графов\"];\n        let i = Math.floor(Math.random() * operations.length);\n        let operationString = operations[i];\n    \n        function generateRandomMatrix(vertices: string[]): number[][] {\n            let size = vertices.length;\n            let matrix: number[][] = Array.from({ length: size }, () => \n                Array.from({ length: size }, () => Math.floor(Math.random() * 2))\n            );\n            for (let i = 0; i < size; i++) {\n                matrix[i][i] = 0; // Ensure no self-loops\n            }\n            return matrix;\n        }\n    \n        function renderMatrix(matrix: number[][], vertices: string[]): string {\n            let headerRow = `<tr><th scope=\"col\"> </th>${vertices.map(v => `<th scope=\"col\">${v}</th>`).join('')}</tr>`;\n            let bodyRows = matrix.map((row, rowIndex) => {\n                let cells = row.map(cell => `<td>${cell}</td>`).join('');\n                return `<tr><th scope=\"row\">${vertices[rowIndex]}</th>${cells}</tr>`;\n            }).join('');\n            return `<table><thead>${headerRow}</thead><tbody>${bodyRows}</tbody></table>`;\n        }\n    \n        function getRandomSubarray(arr: string[], minSize: number, maxSize: number): string[] {\n            let shuffled = arr.slice(0);\n            for (let i = arr.length - 1; i > 0; i--) {\n                let j = Math.floor(Math.random() * (i + 1));\n                [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n            }\n            let size = Math.floor(Math.random() * (maxSize - minSize + 1)) + minSize;\n            let subarray = shuffled.slice(0, size);\n            return subarray.sort();\n        }\n    \n        let allVertices: string[] = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\"];\n        let minSize = 2;\n        let maxSize = 6;\n    \n        let vertices1 = getRandomSubarray(allVertices, minSize, maxSize);\n        let vertices2 = getRandomSubarray(allVertices, minSize, maxSize);\n    \n        let matrix1: number[][] = generateRandomMatrix(vertices1);\n        let matrix2: number[][] = generateRandomMatrix(vertices2);\n    \n        return () => <p>Провести операцию {operationString}\n            <div dangerouslySetInnerHTML={{ __html: renderMatrix(matrix1, vertices1) }} />\n            <div dangerouslySetInnerHTML={{ __html: renderMatrix(matrix2, vertices2) }} />\n        </p>;\n    }\n    \n    protected override generateTaskGraph() {\n        let task_graph: Graph<T1, T2> = GraphGenerator.random2components(4, 4, 0.3);\n        return task_graph;\n    }    \n    \n    protected override generateGraph(){\n        let graph: Graph<T1, T2> = GraphGenerator.random(0, 0.3)\n        return graph\n    }\n\n    protected override isGraphModified(){\n        return true\n    }\n    \n    protected override isGraphRepainted(){\n        return false\n    }\n    \n    protected override isGraphNodeRenamed(){\n        return true\n    }\n    \n    protected override isGraphReweight(){\n        return false\n    }\n\n    protected isVisualizingPolicyChangeble(){\n        return false\n    }\n    \n    protected override isNodeNameVisible(){\n        return true\n    }\n\n    protected override isEdgeWeightVisible(){\n        return false\n    }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}