{"ast":null,"code":"var _jsxFileName = \"/home/marihuyatnik/ERW/Module-BinaryOperations/src/components/MatrixLibrary/matrixRow.tsx\";\nimport React from \"react\";\nimport { Cell, LabelCell } from \"./matrixCell\";\nimport \"./matrixRow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Row(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"matrix-\" + props.matrixId + \"-row-\" + props.id.toString(),\n    className: \"row\",\n    children: props.vector.map((el, col_i) => {\n      if (props.has_index && col_i === 0) {\n        return /*#__PURE__*/_jsxDEV(LabelCell, {\n          id: col_i,\n          rowId: props.id,\n          matrixId: props.matrixId,\n          value: el,\n          clickHandler: props.clickHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 28\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Cell, {\n          id: col_i,\n          rowId: props.id,\n          matrixId: props.matrixId,\n          value: el,\n          clickHandler: props.clickHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 28\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_c = Row;\nexport function LabelRow(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"matrix-\" + props.matrixId + \"-row-\" + props.id.toString(),\n    className: \"row\",\n    children: props.vector.map((el, col_i) => {\n      return /*#__PURE__*/_jsxDEV(LabelCell, {\n        id: col_i,\n        rowId: props.id,\n        matrixId: props.matrixId,\n        value: el,\n        clickHandler: props.clickHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_c2 = LabelRow;\nvar _c, _c2;\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"LabelRow\");","map":{"version":3,"names":["React","Cell","LabelCell","jsxDEV","_jsxDEV","Row","props","id","matrixId","toString","className","children","vector","map","el","col_i","has_index","rowId","value","clickHandler","fileName","_jsxFileName","lineNumber","columnNumber","_c","LabelRow","_c2","$RefreshReg$"],"sources":["/home/marihuyatnik/ERW/Module-BinaryOperations/src/components/MatrixLibrary/matrixRow.tsx"],"sourcesContent":["import React from \"react\";\nimport {Cell, LabelCell} from \"./matrixCell\";\nimport \"./matrixRow.css\"\n\n\ntype RowProps = {\n    id: number,\n    matrixId: string,\n    vector: string[],\n    has_index: boolean,\n    clickHandler: (cellId: number, rowId: number) => void\n}\n\n\nexport function Row(props: RowProps){\n    return (\n        <div id={\"matrix-\" + props.matrixId + \"-row-\" + props.id.toString()} className=\"row\">\n            {props.vector.map((el, col_i) => {\n                if (props.has_index && col_i === 0){\n                    return <LabelCell \n                        id={col_i} \n                        rowId={props.id} \n                        matrixId={props.matrixId} \n                        value={el}\n                        clickHandler={props.clickHandler}/>\n                }\n                else{\n                    return <Cell \n                        id={col_i} \n                        rowId={props.id} \n                        matrixId={props.matrixId} \n                        value={el}\n                        clickHandler={props.clickHandler}/>\n                } \n            })}\n        </div>\n    )\n}\n\ntype LabelRowProps = {\n    id: number,\n    matrixId: string,\n    vector: string[],\n    clickHandler: (cellId: number, rowId: number) => void\n}\n\nexport function LabelRow(props: LabelRowProps){\n    return (\n        <div id={\"matrix-\" + props.matrixId + \"-row-\" + props.id.toString()} className=\"row\">\n            {props.vector.map((el, col_i) => {\n                return <LabelCell \n                    id={col_i} \n                    rowId={props.id} \n                    matrixId={props.matrixId} \n                    value={el}\n                    clickHandler={props.clickHandler}/>\n            })}\n        </div>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,EAAEC,SAAS,QAAO,cAAc;AAC5C,OAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAYxB,OAAO,SAASC,GAAGA,CAACC,KAAe,EAAC;EAChC,oBACIF,OAAA;IAAKG,EAAE,EAAE,SAAS,GAAGD,KAAK,CAACE,QAAQ,GAAG,OAAO,GAAGF,KAAK,CAACC,EAAE,CAACE,QAAQ,CAAC,CAAE;IAACC,SAAS,EAAC,KAAK;IAAAC,QAAA,EAC/EL,KAAK,CAACM,MAAM,CAACC,GAAG,CAAC,CAACC,EAAE,EAAEC,KAAK,KAAK;MAC7B,IAAIT,KAAK,CAACU,SAAS,IAAID,KAAK,KAAK,CAAC,EAAC;QAC/B,oBAAOX,OAAA,CAACF,SAAS;UACbK,EAAE,EAAEQ,KAAM;UACVE,KAAK,EAAEX,KAAK,CAACC,EAAG;UAChBC,QAAQ,EAAEF,KAAK,CAACE,QAAS;UACzBU,KAAK,EAAEJ,EAAG;UACVK,YAAY,EAAEb,KAAK,CAACa;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAC3C,CAAC,MACG;QACA,oBAAOnB,OAAA,CAACH,IAAI;UACRM,EAAE,EAAEQ,KAAM;UACVE,KAAK,EAAEX,KAAK,CAACC,EAAG;UAChBC,QAAQ,EAAEF,KAAK,CAACE,QAAS;UACzBU,KAAK,EAAEJ,EAAG;UACVK,YAAY,EAAEb,KAAK,CAACa;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAC3C;IACJ,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACC,EAAA,GAvBenB,GAAG;AAgCnB,OAAO,SAASoB,QAAQA,CAACnB,KAAoB,EAAC;EAC1C,oBACIF,OAAA;IAAKG,EAAE,EAAE,SAAS,GAAGD,KAAK,CAACE,QAAQ,GAAG,OAAO,GAAGF,KAAK,CAACC,EAAE,CAACE,QAAQ,CAAC,CAAE;IAACC,SAAS,EAAC,KAAK;IAAAC,QAAA,EAC/EL,KAAK,CAACM,MAAM,CAACC,GAAG,CAAC,CAACC,EAAE,EAAEC,KAAK,KAAK;MAC7B,oBAAOX,OAAA,CAACF,SAAS;QACbK,EAAE,EAAEQ,KAAM;QACVE,KAAK,EAAEX,KAAK,CAACC,EAAG;QAChBC,QAAQ,EAAEF,KAAK,CAACE,QAAS;QACzBU,KAAK,EAAEJ,EAAG;QACVK,YAAY,EAAEb,KAAK,CAACa;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAC3C,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACG,GAAA,GAbeD,QAAQ;AAAA,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}